name: Windows distributions on Tag

on:
  create:

jobs:
  build-and-release:
    if: github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/winRelease/')
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Get the Release ID
        id: get_release
        uses: actions/github-script@v7
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_FOR_RELEASES }}
        with:
          script: |
            const { GITHUB_REF } = process.env;
            const tag = GITHUB_REF.split('/').pop();
            const { data: releases } = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const release = releases.find(rel => rel.tag_name === `release/${tag}`);
            if (!release) {
              throw new Error(`Release not found for tag ${tag}`);
            }
            core.setOutput('release_id', release.id);
          result-encoding: string

      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'
          cache: gradle

      - name: Build and Package Project
        run: .\gradlew packageReleaseDistributionForCurrentOS
        env:
          CI: 'false'

      - name: Extract Version Number
        shell: pwsh
        run: |
          Write-Host "Extracting version from $env:GITHUB_REF"
          $version = $env:GITHUB_REF -replace 'refs/tags/winRelease/', ''
          echo "version=$version" >> $env:GITHUB_ENV
          Write-Host "Extracted version: $version"

      - name: Find MSI file
        shell: pwsh
        run: |
          $msi_path = (Get-ChildItem -Path .\composeApp\build\compose\binaries\main-release\msi -Filter "OctoMeter-*.msi" | Select-Object -First 1).FullName
          echo "msi_path=$msi_path" >> $env:GITHUB_ENV

      - name: Upload MSI Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_FOR_RELEASES }}
        with:
          upload_url: https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.get_release.outputs.release_id }}/assets{?name,label}
          asset_path: ${{ env.msi_path }}
          asset_name: OctoMeter-${{ env.version }}.msi
          asset_content_type: application/x-msi

      - name: Find EXE file
        shell: pwsh
        run: |
          $exe_path = (Get-ChildItem -Path .\composeApp\build\compose\binaries\main-release\exe -Filter "OctoMeter-*.exe" | Select-Object -First 1).FullName
          echo "exe_path=$exe_path" >> $env:GITHUB_ENV

      - name: Upload EXE Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_FOR_RELEASES }}
        with:
          upload_url: https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.get_release.outputs.release_id }}/assets{?name,label}
          asset_path: ${{ env.exe_path }}
          asset_name: OctoMeter-${{ env.version }}.exe
          asset_content_type: application/vnd.microsoft.portable-executable
